package greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.yz.books.db.VideoChapter;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "video_chapter".
*/
public class VideoChapterDao extends AbstractDao<VideoChapter, Long> {

    public static final String TABLENAME = "video_chapter";

    /**
     * Properties of entity VideoChapter.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property _id = new Property(0, Long.class, "_id", true, "chapterId");
        public final static Property ChapterName = new Property(1, String.class, "chapterName", false, "chapterName");
        public final static Property FileMd5String = new Property(2, String.class, "fileMd5String", false, "fileMd5String");
        public final static Property ChapterUrl = new Property(3, String.class, "chapterUrl", false, "chapterUrl");
        public final static Property VideoId = new Property(4, int.class, "videoId", false, "videoId");
    }


    public VideoChapterDao(DaoConfig config) {
        super(config);
    }
    
    public VideoChapterDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, VideoChapter entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }
 
        String chapterName = entity.getChapterName();
        if (chapterName != null) {
            stmt.bindString(2, chapterName);
        }
 
        String fileMd5String = entity.getFileMd5String();
        if (fileMd5String != null) {
            stmt.bindString(3, fileMd5String);
        }
 
        String chapterUrl = entity.getChapterUrl();
        if (chapterUrl != null) {
            stmt.bindString(4, chapterUrl);
        }
        stmt.bindLong(5, entity.getVideoId());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, VideoChapter entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }
 
        String chapterName = entity.getChapterName();
        if (chapterName != null) {
            stmt.bindString(2, chapterName);
        }
 
        String fileMd5String = entity.getFileMd5String();
        if (fileMd5String != null) {
            stmt.bindString(3, fileMd5String);
        }
 
        String chapterUrl = entity.getChapterUrl();
        if (chapterUrl != null) {
            stmt.bindString(4, chapterUrl);
        }
        stmt.bindLong(5, entity.getVideoId());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public VideoChapter readEntity(Cursor cursor, int offset) {
        VideoChapter entity = new VideoChapter( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // _id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // chapterName
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // fileMd5String
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // chapterUrl
            cursor.getInt(offset + 4) // videoId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, VideoChapter entity, int offset) {
        entity.set_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setChapterName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFileMd5String(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setChapterUrl(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setVideoId(cursor.getInt(offset + 4));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(VideoChapter entity, long rowId) {
        entity.set_id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(VideoChapter entity) {
        if(entity != null) {
            return entity.get_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(VideoChapter entity) {
        return entity.get_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
